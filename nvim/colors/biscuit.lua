local setup = function()
  vim.g.colors_name = 'biscuit'
  vim.o.background = 'dark'
  local HI = vim.api.nvim_set_hl
  vim.g.terminal_color_0 = '#1A1515'
  vim.g.terminal_color_1 = '#F07342'
  vim.g.terminal_color_2 = '#768F80'
  vim.g.terminal_color_3 = '#959A6B'
  vim.g.terminal_color_4 = '#E39C45'
  vim.g.terminal_color_5 = '#CF223E'
  vim.g.terminal_color_6 = '#756D94'
  vim.g.terminal_color_7 = '#DCC9BC'
  vim.g.terminal_color_8 = '#725a5a'
  vim.g.terminal_color_9 = '#F07342'
  vim.g.terminal_color_10 = '#768F80'
  vim.g.terminal_color_11 = '#959A6B'
  vim.g.terminal_color_12 = '#E39C45'
  vim.g.terminal_color_13 = '#CF223E'
  vim.g.terminal_color_14 = '#756D94'
  vim.g.terminal_color_15 = '#7B3D79'
  HI(0, '@lsp.type.operator', { link = '@operator' })
  HI(0, '@lsp.type.parameter', { link = '@parameter' })
  HI(0, '@class', { link = 'TSType' })
  HI(0, '@lsp.type.selfKeyword', { link = '@variable.builtin' })
  HI(0, '@enum', { link = 'TSType' })
  HI(0, '@enumMember', { link = 'Constant' })
  HI(0, '@lsp.type.struct', { link = 'Structure' })
  HI(0, '@lsp.type.type', { link = 'Type' })
  HI(0, '@lsp.type.typeAlias', { link = '@type.definition' })
  HI(0, '@lsp.type.typeParameter', { link = 'Typedef' })
  HI(0, '@lsp.type.unresolvedReference', { link = 'Error' })
  HI(0, '@decorator', { link = 'Identifier' })
  HI(0, '@lsp.typemod.class.defaultLibrary', { link = '@type.builtin' })
  HI(0, '@lsp.typemod.enum.defaultLibrary', { link = '@type.builtin' })
  HI(0, '@lsp.typemod.enumMember.defaultLibrary', { link = '@constant.builtin' })
  HI(0, '@lsp.typemod.function.builtin', { link = '@function.builtin' })
  HI(0, '@lsp.typemod.function.defaultLibrary', { link = '@function.builtin' })
  HI(0, '@lsp.typemod.function.readonly', { link = '@method' })
  HI(0, '@lsp.typemod.keyword.async', { link = '@keyword.coroutine' })
  HI(0, '@lsp.typemod.keyword.documentation', { link = 'Special' })
  HI(0, '@lsp.typemod.macro.defaultLibrary', { link = '@function.builtin' })
  HI(0, '@lsp.typemod.method.defaultLibrary', { link = '@function.builtin' })
  HI(0, '@lsp.typemod.operator.controlFlow', { link = '@exception' })
  HI(0, '@lsp.typemod.operator.injected', { link = '@operator' })
  HI(0, '@lsp.typemod.string.injected', { link = '@string' })
  HI(0, '@lsp.typemod.variable.defaultLibrary', { link = '@variable.builtin' })
  HI(0, '@lsp.typemod.variable.global', { link = '@constant' })
  HI(0, '@lsp.typemod.variable.injected', { link = '@variable' })
  HI(0, '@lsp.typemod.variable.static', { link = '@constant' })
  HI(0, '@macro', { link = 'Macro' })
  HI(0, '@number.date', { fg = '#3DDBD9' })
  HI(0, '@number.date.effective', { fg = '#42BE65' })
  HI(0, '@number.interval', { fg = '#78A9FF' })
  HI(0, '@number.quantity', { fg = '#33B1FF' })
  HI(0, '@number.quantity.negative', { fg = '#EE5396' })
  HI(0, '@number.status', { fg = '#FF7EB6' })
  HI(0, '@punctuation', { link = 'Delimiter' })
  HI(0, '@reference', { fg = '#D0D0D0' })
  HI(0, '@text.literal.commodity', { fg = '#42BE65' })
  HI(0, 'BufferLineDiagnostic', { bold = true, cterm = { bold = true }, fg = '#EE5396' })
  HI(0, 'BufferLineDiagnosticVisible', { bold = true, cterm = { bold = true }, fg = '#EE5396' })
  HI(0, 'CmpItemKindColor', { bg = '#3DDBD9', fg = '#262626' })
  HI(0, 'CmpItemKindFile', { bg = '#BE95FF', fg = '#262626' })
  HI(0, 'CmpItemKindFolder', { bg = '#42BE65', fg = '#262626' })
  HI(0, 'ErrorMsg', { bg = '#1A1515', fg = '#F07342' })
  HI(0, 'CodeBlock', { bg = '#262626' })
  HI(0, 'CurSearch', { link = 'Search' })
  HI(0, 'CursorLineFold', { link = 'FoldColumn' })
  HI(0, 'CursorLineSign', { link = 'SignColumn' })
  HI(0, 'Decorator', { fg = '#FF7EB6' })
  HI(0, 'Delimeter', { fg = '#FFFFFF' })
  HI(0, 'DiagnosticFloatingOk', { link = 'DiagnosticOk' })
  HI(0, 'DiagnosticOk', { ctermfg = 10, fg = '#90EE90' })
  HI(0, 'DiagnosticSignOk', { link = 'DiagnosticOk' })
  HI(0, 'DiagnosticUnderlineOk', { cterm = { underline = true }, sp = '#90EE90', underline = true })
  HI(0, 'DiagnosticVirtualTextOk', { link = 'DiagnosticOk' })
  HI(0, 'DiffChanged', { fg = '#78A9FF' })
  HI(0, 'EndOfBuffer', { fg = '#262626' })
  HI(0, 'FloatShadow', { bg = '#000000', blend = 80 })
  HI(0, 'FloatShadowThrough', { bg = '#000000', blend = 100 })
  HI(0, 'CmpItemKindText', { bg = '#78A9FF', fg = '#262626' })
  HI(0, 'Repeat', { fg = '#959A6B' })
  HI(0, 'StorageClass', { fg = '#959A6B' })
  HI(0, 'Structure', { fg = '#CF223E' })
  HI(0, 'Tag', { fg = '#959A6B' })
  HI(0, 'Todo', { bg = '#2D2424', fg = '#959A6B' })
  HI(0, 'Typedef', { fg = '#959A6B' })
  HI(0, 'DiffText', { bg = '#1A1515', fg = '#E39C45' })
  HI(0, 'DiffAdded', { bg = '#1A1515', fg = '#768F80' })
  HI(0, 'DiffFile', { bg = '#1A1515', fg = '#F07342' })
  HI(0, 'DiffNewFile', { bg = '#1A1515', fg = '#768F80' })
  HI(0, 'DiffLine', { bg = '#1A1515', fg = '#E39C45' })
  HI(0, 'DiffRemoved', { bg = '#1A1515', fg = '#F07342' })
  HI(0, 'gitcommitOverflow', { fg = '#F07342' })
  HI(0, 'gitcommitSummary', { fg = '#768F80' })
  HI(0, 'gitcommitComment', { fg = '#725A5A' })
  HI(0, 'gitcommitUntracked', { fg = '#725A5A' })
  HI(0, 'gitcommitDiscarded', { fg = '#725A5A' })
  HI(0, 'gitcommitSelected', { fg = '#725A5A' })
  HI(0, 'gitcommitHeader', { fg = '#CF223E' })
  HI(0, 'gitcommitSelectedType', { fg = '#E39C45' })
  HI(0, 'gitcommitUnmergedType', { fg = '#E39C45' })
  HI(0, 'gitcommitDiscardedType', { fg = '#E39C45' })
  HI(0, 'gitcommitBranch', { bold = true, fg = '#E39C45' })
  HI(0, 'gitcommitUntrackedFile', { fg = '#959A6B' })
  HI(0, 'gitcommitUnmergedFile', { bold = true, fg = '#F07342' })
  HI(0, 'gitcommitDiscardedFile', { bold = true, fg = '#F07342' })
  HI(0, 'gitcommitSelectedFile', { bold = true, fg = '#768F80' })
  HI(0, 'GitGutterAdd', { bg = '#1A1515', fg = '#768F80' })
  HI(0, 'GitGutterChange', { bg = '#1A1515', fg = '#E39C45' })
  HI(0, 'GitGutterDelete', { bg = '#1A1515', fg = '#F07342' })
  HI(0, 'GitGutterChangeDelete', { bg = '#1A1515', fg = '#CF223E' })
  HI(0, 'SpellBad', { cterm = { undercurl = true }, ctermbg = 9, sp = '#F07342', undercurl = true })
  HI(0, 'SpellLocal', { cterm = { undercurl = true }, ctermbg = 14, sp = '#756D94', undercurl = true })
  HI(0, 'SpellCap', { cterm = { undercurl = true }, ctermbg = 12, sp = '#E39C45', undercurl = true })
  HI(0, 'SpellRare', { cterm = { undercurl = true }, ctermbg = 13, sp = '#CF223E', undercurl = true })
  HI(0, 'DiagnosticError', { fg = '#F07342' })
  HI(0, 'DiagnosticWarn', { fg = '#CF223E' })
  HI(0, 'DiagnosticInfo', { fg = '#DCC9BC' })
  HI(0, 'DiagnosticHint', { fg = '#756D94' })
  HI(0, 'DiagnosticUnderlineWarning', { sp = '#CF223E', undercurl = true })
  HI(0, 'DiagnosticUnderlineInformation', { sp = '#614F76', undercurl = true })
  HI(0, 'LspDiagnosticsDefaultError', { link = 'DiagnosticError' })
  HI(0, 'LspDiagnosticsDefaultWarning', { link = 'DiagnosticWarn' })
  HI(0, 'LspDiagnosticsDefaultInformation', { link = 'DiagnosticInfo' })
  HI(0, 'LspDiagnosticsDefaultHint', { link = 'DiagnosticHint' })
  HI(0, 'LspDiagnosticsUnderlineError', { link = 'DiagnosticUnderlineError' })
  HI(0, 'LspDiagnosticsUnderlineWarning', { link = 'DiagnosticUnderlineWarning' })
  HI(0, 'LspDiagnosticsUnderlineInformation', { link = 'DiagnosticUnderlineInformation' })
  HI(0, 'LspDiagnosticsUnderlineHint', { link = 'DiagnosticUnderlineHint' })
  HI(0, 'TSAnnotation', { fg = '#614F76' })
  HI(0, 'TSAttribute', { fg = '#959A6B' })
  HI(0, 'TSBoolean', { fg = '#E39C45' })
  HI(0, 'TSCharacter', { fg = '#F07342' })
  HI(0, 'TSComment', { fg = '#725A5A', italic = true })
  HI(0, 'TSConstructor', { fg = '#E39C45' })
  HI(0, 'NonText', { fg = '#725A5A' })
  HI(0, 'TSConstant', { fg = '#E39C45' })
  HI(0, 'TSConstBuiltin', { fg = '#E39C45', italic = true })
  HI(0, 'TSConstMacro', { fg = '#F07342' })
  HI(0, 'TSError', { fg = '#F07342' })
  HI(0, 'Search', { bg = '#959A6B', fg = '#2D2424' })
  HI(0, 'TSField', { fg = '#DCC9BC' })
  HI(0, 'TSFloat', { fg = '#E39C45' })
  HI(0, 'TSFunction', { fg = '#E39C45' })
  HI(0, 'Directory', { fg = '#E39C45' })
  HI(0, 'Normal', { bg = '#1A1515', fg = '#DCC9BC' })
  HI(0, 'TSInclude', { fg = '#E39C45' })
  HI(0, 'Special', { fg = '#756D94' })
  HI(0, 'TSKeywordFunction', { fg = '#CF223E' })
  HI(0, 'TSKeywordOperator', { fg = '#CF223E' })
  HI(0, 'TSLabel', { fg = '#959A6B' })
  HI(0, 'TSMethod', { fg = '#E39C45' })
  HI(0, 'TSNamespace', { fg = '#F07342' })
  HI(0, 'TSNone', { fg = '#DCC9BC' })
  HI(0, 'TSNumber', { fg = '#E39C45' })
  HI(0, 'TSOperator', { fg = '#DCC9BC' })
  HI(0, 'TSParameter', { fg = '#DCC9BC' })
  HI(0, 'TSParameterReference', { fg = '#DCC9BC' })
  HI(0, 'TSProperty', { fg = '#DCC9BC' })
  HI(0, 'TSPunctDelimiter', { fg = '#614F76' })
  HI(0, 'TSPunctBracket', { fg = '#DCC9BC' })
  HI(0, 'TSPunctSpecial', { fg = '#DCC9BC' })
  HI(0, 'TSRepeat', { fg = '#CF223E' })
  HI(0, 'PmenuSel', { bg = '#DCC9BC', fg = '#2D2424' })
  HI(0, 'TSStringRegex', { fg = '#756D94' })
  HI(0, 'LspReferenceWrite', { bg = '#525252', sp = '#9C8181', underline = true })
  HI(0, 'TSSymbol', { fg = '#768F80' })
  HI(0, 'SpecialChar', { fg = '#614F76' })
  HI(0, 'TSTagDelimiter', { fg = '#614F76' })
  HI(0, 'LineNr', { bg = '#1A1515', fg = '#9C8181' })
  HI(0, 'TSStrong', { bold = true })
  HI(0, 'TSEmphasis', { fg = '#E39C45', italic = true })
  HI(0, 'TSUnderline', { fg = '#1A1515', underline = true })
  HI(0, 'TSStrike', { fg = '#1A1515', strikethrough = true })
  HI(0, 'TSTitle', { fg = '#E39C45' })
  HI(0, 'TSLiteral', { fg = '#E39C45' })
  HI(0, 'DiffChange', { bg = '#1A1515', fg = '#725A5A' })
  HI(0, 'TSType', { fg = '#959A6B' })
  HI(0, 'DiffAdd', { bg = '#1A1515', fg = '#768F80' })
  HI(0, 'TSVariable', { fg = '#F07342' })
  HI(0, 'DiffDelete', { bg = '#1A1515', fg = '#F07342' })
  HI(0, 'TSDefinition', { sp = '#9C8181', underline = true })
  HI(0, 'TSDefinitionUsage', { sp = '#9C8181', underline = true })
  HI(0, 'TSCurrentScope', { bold = true })
  HI(0, 'LspInlayHint', { fg = '#725A5A', italic = true })
  HI(0, 'netrwHidePat', { link = 'Statement' })
  HI(0, '@comment', { link = 'TSComment' })
  HI(0, '@error', { fg = '#33B1FF', link = 'TSError' })
  HI(0, '@none', { link = 'TSNone' })
  HI(0, '@preproc', { link = 'PreProc' })
  HI(0, '@define', { link = 'Define' })
  HI(0, '@operator', { link = 'TSOperator' })
  HI(0, '@punctuation.delimiter', { fg = '#3DDBD9', link = 'TSPunctDelimiter' })
  HI(0, '@punctuation.bracket', { fg = '#3DDBD9', link = 'TSPunctBracket' })
  HI(0, '@punctuation.special', { fg = '#3DDBD9', link = 'TSPunctSpecial' })
  HI(0, '@string', { link = 'TSString' })
  HI(0, '@string.regex', { fg = '#08BDBA', link = 'TSStringRegex' })
  HI(0, '@string.escape', { fg = '#82CFFF', link = 'TSStringEscape' })
  HI(0, '@string.special', { link = 'SpecialChar' })
  HI(0, '@character', { link = 'TSCharacter' })
  HI(0, '@character.special', { link = 'SpecialChar' })
  HI(0, '@boolean', { link = 'TSBoolean' })
  HI(0, '@number', { link = 'TSNumber' })
  HI(0, '@float', { link = 'TSFloat' })
  HI(0, '@function', { bold = true, cterm = { bold = true }, fg = '#FF7EB6', link = 'TSFunction' })
  HI(0, '@function.call', { link = 'TSFunction' })
  HI(0, '@function.builtin', { fg = '#FF7EB6', link = 'TSFuncBuiltin' })
  HI(0, '@function.macro', { fg = '#08BDBA', link = 'TSFuncMacro' })
  HI(0, '@method', { fg = '#08BDBA', link = 'TSMethod' })
  HI(0, '@method.call', { link = 'TSMethod' })
  HI(0, '@constructor', { fg = '#78A9FF', link = 'TSConstructor' })
  HI(0, '@parameter', { fg = '#D0D0D0', link = 'TSParameter' })
  HI(0, '@keyword', { fg = '#78A9FF', link = 'TSKeyword' })
  HI(0, '@keyword.function', { fg = '#3DDBD9', link = 'TSKeywordFunction' })
  HI(0, '@keyword.operator', { fg = '#3DDBD9', link = 'TSKeywordOperator' })
  HI(0, '@keyword.return', { link = 'TSKeyword' })
  HI(0, '@conditional', { fg = '#78A9FF', link = 'TSConditional' })
  HI(0, '@repeat', { fg = '#78A9FF', link = 'TSRepeat' })
  HI(0, '@debug', { link = 'Debug' })
  HI(0, '@label', { fg = '#82CFFF', link = 'TSLabel' })
  HI(0, '@include', { fg = '#78A9FF', link = 'TSInclude' })
  HI(0, '@exception', { fg = '#82CFFF', link = 'TSException' })
  HI(0, '@type', { link = 'TSType' })
  HI(0, '@type.builtin', { link = 'TSTypeBuiltin' })
  HI(0, '@type.qualifier', { link = 'TSKeyword' })
  HI(0, '@type.definition', { link = 'TSType' })
  HI(0, '@storageclass', { link = 'StorageClass' })
  HI(0, '@attribute', { fg = '#82CFFF', link = 'TSAttribute' })
  HI(0, '@field', { fg = '#D0D0D0', link = 'TSField' })
  HI(0, '@property', { fg = '#EE5396', link = 'TSProperty' })
  HI(0, '@variable', { fg = '#D0D0D0', link = 'TSVariable' })
  HI(0, 'Pmenu', { bg = '#2D2424', fg = '#DCC9BC' })
  HI(0, '@constant', { fg = '#BE95FF', link = 'TSConstant' })
  HI(0, '@constant.builtin', { fg = '#08BDBA', link = 'TSConstant' })
  HI(0, '@constant.macro', { fg = '#08BDBA', link = 'TSConstant' })
  HI(0, '@namespace', { fg = '#08BDBA', link = 'TSNamespace' })
  HI(0, '@symbol', { bold = true, cterm = { bold = true }, fg = '#82CFFF', link = 'TSSymbol' })
  HI(0, '@text', { fg = '#D0D0D0', link = 'TSText' })
  HI(0, '@text.diff.add', { link = 'DiffAdd' })
  HI(0, '@text.diff.delete', { link = 'DiffDelete' })
  HI(0, '@text.strong', { link = 'TSStrong' })
  HI(0, '@text.emphasis', { bold = true, cterm = { bold = true }, fg = '#EE5396', link = 'TSEmphasis' })
  HI(0, '@text.underline', { cterm = { underline = true }, fg = '#EE5396', link = 'TSUnderline', underline = true })
  HI(0, '@text.strike', { cterm = { strikethrough = true }, fg = '#EE5396', link = 'TSStrike', strikethrough = true })
  HI(0, '@text.title', { fg = '#EE5396', link = 'TSTitle' })
  HI(0, '@text.literal', { fg = '#D0D0D0', link = 'TSLiteral' })
  HI(0, '@text.uri', { cterm = { underline = true }, fg = '#BE95FF', link = 'TSURI', underline = true })
  HI(0, '@text.math', { link = 'Number' })
  HI(0, '@text.environment', { link = 'Macro' })
  HI(0, '@text.environment.name', { link = 'Type' })
  HI(0, '@text.reference', { link = 'TSParameterReference' })
  HI(0, '@text.todo', { link = 'Todo' })
  HI(0, '@text.note', { link = 'Tag' })
  HI(0, '@text.warning', { link = 'DiagnosticWarn' })
  HI(0, '@text.danger', { link = 'DiagnosticError' })
  HI(0, '@tag', { fg = '#78A9FF', link = 'TSTag' })
  HI(0, '@tag.attribute', { fg = '#82CFFF', link = 'TSAttribute' })
  HI(0, '@tag.delimiter', { fg = '#82CFFF', link = 'TSTagDelimiter' })
  HI(0, 'rainbowcol1', { fg = '#FFE9C7' })
  HI(0, 'rainbowcol2', { fg = '#E39C45' })
  HI(0, 'rainbowcol3', { fg = '#959A6B' })
  HI(0, 'rainbowcol4', { fg = '#7B3D79' })
  HI(0, 'rainbowcol5', { fg = '#756D94' })
  HI(0, 'rainbowcol6', { fg = '#E39C45' })
  HI(0, 'rainbowcol7', { fg = '#CF223E' })
  HI(0, 'NvimInternalError', { bg = '#F07342', fg = '#1A1515' })
  HI(0, 'FloatBorder', { bg = '#1A1515', fg = '#DCC9BC' })
  HI(0, 'NormalNC', { bg = '#1A1515', fg = '#DCC9BC' })
  HI(0, 'TermCursor', { bg = '#DCC9BC', fg = '#1A1515' })
  HI(0, 'TermCursorNC', { bg = '#DCC9BC', fg = '#1A1515' })
  HI(0, 'User1', { bg = '#453636', fg = '#F07342' })
  HI(0, 'User2', { bg = '#453636', fg = '#CF223E' })
  HI(0, 'User3', { bg = '#453636', fg = '#DCC9BC' })
  HI(0, 'User4', { bg = '#453636', fg = '#756D94' })
  HI(0, 'User5', { bg = '#453636', fg = '#DCC9BC' })
  HI(0, 'User6', { bg = '#2D2424', fg = '#DCC9BC' })
  HI(0, 'User7', { bg = '#453636', fg = '#DCC9BC' })
  HI(0, 'User8', { bg = '#453636', fg = '#1A1515' })
  HI(0, 'User9', { bg = '#453636', fg = '#1A1515' })
  HI(0, 'TreesitterContext', { bg = '#2D2424', italic = true })
  HI(0, 'NotifyERRORBorder', { fg = '#F07342' })
  HI(0, 'NotifyWARNBorder', { fg = '#CF223E' })
  HI(0, 'NotifyINFOBorder', { fg = '#DCC9BC' })
  HI(0, 'NotifyDEBUGBorder', { fg = '#756D94' })
  HI(0, 'NotifyTRACEBorder', { fg = '#756D94' })
  HI(0, 'NotifyERRORIcon', { fg = '#F07342' })
  HI(0, 'NotifyWARNIcon', { fg = '#CF223E' })
  HI(0, 'NotifyINFOIcon', { fg = '#DCC9BC' })
  HI(0, 'NotifyDEBUGIcon', { fg = '#756D94' })
  HI(0, 'NotifyTRACEIcon', { fg = '#756D94' })
  HI(0, 'NotifyERRORTitle', { fg = '#F07342' })
  HI(0, 'NotifyWARNTitle', { fg = '#CF223E' })
  HI(0, 'NotifyINFOTitle', { fg = '#DCC9BC' })
  HI(0, 'NotifyDEBUGTitle', { fg = '#756D94' })
  HI(0, 'NotifyTRACETitle', { fg = '#756D94' })
  HI(0, 'NotifyERRORBody', { link = 'Normal' })
  HI(0, 'NotifyWARNBody', { link = 'Normal' })
  HI(0, 'NotifyINFOBody', { link = 'Normal' })
  HI(0, 'NotifyDEBUGBody', { link = 'Normal' })
  HI(0, 'NotifyTRACEBody', { link = 'Normal' })
  HI(0, 'IndentBlanklineChar', { fg = '#453636', nocombine = true })
  HI(0, 'IndentBlanklineContextChar', { fg = '#9C8181', nocombine = true })
  HI(0, 'CmpDocumentationBorder', { bg = '#1A1515', fg = '#DCC9BC' })
  HI(0, 'CmpDocumentation', { bg = '#1A1515', fg = '#DCC9BC' })
  HI(0, 'CmpItemKindKeyword', { bg = '#78A9FF', fg = '#CF223E' })
  HI(0, 'CmpItemKindVariable', { bg = '#BE95FF', fg = '#F07342' })
  HI(0, 'Comment', { cterm = { italic = true }, fg = '#725A5A', italic = true })
  HI(0, 'netrwYacc', { link = 'netrwPlain' })
  HI(0, 'netrwVersion', { link = 'Identifier' })
  HI(0, 'netrwTreeBar', { link = 'Special' })
  HI(0, 'netrwTmp', { link = 'netrwGray' })
  HI(0, 'netrwTimeSep', { link = 'netrwDateSep' })
  HI(0, 'netrwTilde', { link = 'netrwGray' })
  HI(0, 'netrwTags', { link = 'netrwGray' })
  HI(0, 'netrwSymLink', { link = 'Question' })
  HI(0, 'netrwSpecFile', { link = 'netrwGray' })
  HI(0, 'netrwQHTopic', { link = 'Number' })
  HI(0, 'netrwPix', { link = 'Special' })
  HI(0, 'netrwObj', { link = 'netrwGray' })
  HI(0, 'netrwMarkFile', { link = 'TabLineSel' })
  HI(0, 'netrwMakefile', { link = 'DiffChange' })
  HI(0, 'netrwList', { link = 'Statement' })
  HI(0, 'netrwLink', { link = 'Special' })
  HI(0, 'netrwLib', { link = 'DiffChange' })
  HI(0, 'netrwLex', { link = 'netrwPlain' })
  HI(0, 'netrwHideSep', { link = 'netrwComment' })
  HI(0, 'netrwHide', { link = 'netrwComment' })
  HI(0, 'netrwHelpCmd', { link = 'Function' })
  HI(0, 'netrwHdr', { link = 'netrwPlain' })
  HI(0, 'netrwGray', { link = 'Folded' })
  HI(0, 'netrwExe', { link = 'PreProc' })
  HI(0, 'netrwDir', { link = 'Directory' })
  HI(0, 'netrwDateSep', { link = 'Delimiter' })
  HI(0, 'netrwData', { link = 'Folded' })
  HI(0, 'netrwCoreDump', { link = 'WarningMsg' })
  HI(0, 'netrwCompress', { link = 'netrwGray' })
  HI(0, 'netrwComment', { link = 'Comment' })
  HI(0, 'netrwComma', { link = 'netrwComment' })
  HI(0, 'netrwCmdSep', { link = 'Delimiter' })
  HI(0, 'netrwClassify', { link = 'Function' })
  HI(0, 'netrwBak', { link = 'netrwGray' })
  HI(0, 'mkdRule', { link = 'markdownRule' })
  HI(0, 'mkdListItemCheckbox', { link = 'markdownListMarker' })
  HI(0, 'mkdListItem', { link = 'markdownListMarker' })
  HI(0, 'markdownUrl', { link = 'String' })
  HI(0, 'markdownRule', { link = 'Comment' })
  HI(0, 'markdownOrderedListMarker', { fg = '#3DDBD9' })
  HI(0, 'markdownListMarker', { fg = '#3DDBD9' })
  HI(0, 'markdownItalic', { link = 'Italic' })
  HI(0, 'markdownHeadingRule', { link = 'markdownH1' })
  HI(0, 'markdownHeadingDelimiter', { link = 'markdownH1' })
  HI(0, 'markdownH6', { link = 'markdownH1' })
  HI(0, 'markdownH5', { link = 'markdownH1' })
  HI(0, 'markdownH4', { link = 'markdownH1' })
  HI(0, 'markdownH3', { link = 'markdownH1' })
  HI(0, 'markdownH2', { link = 'markdownH1' })
  HI(0, 'markdownH1', { fg = '#EE5396' })
  HI(0, 'markdownCodeDelimiter', { link = 'markdownCode' })
  HI(0, 'markdownCodeBlock', { link = 'markdownCode' })
  HI(0, 'markdownCode', { link = 'String' })
  HI(0, 'FloatTitle', { link = 'Title' })
  HI(0, 'HealthError', { fg = '#EE5396' })
  HI(0, 'HealthSuccess', { fg = '#42BE65' })
  HI(0, 'HealthWarning', { fg = '#BE95FF' })
  HI(0, 'HydraAmaranth', { fg = '#EE5396' })
  HI(0, 'HydraBlue', { fg = '#78A9FF' })
  HI(0, 'HydraHint', { bg = '#131313' })
  HI(0, 'HydraRed', { fg = '#FF7EB6' })
  HI(0, 'HydraTeal', { fg = '#3DDBD9' })
  HI(0, 'Ignore', { ctermfg = 0 })
  HI(0, 'LineNrAbove', { link = 'LineNr' })
  HI(0, 'LineNrBelow', { link = 'LineNr' })
  HI(0, 'LspInfoBorder', { default = true, link = 'Label' })
  HI(0, 'LspInfoFiletype', { default = true, link = 'Type' })
  HI(0, 'LspInfoList', { default = true, link = 'Function' })
  HI(0, 'LspInfoTip', { default = true, link = 'Comment' })
  HI(0, 'LspInfoTitle', { default = true, link = 'Title' })
  HI(0, 'LspReferenceread', { bg = '#525252', sp = '#9C8181', underline = true })
  HI(0, 'MsgSeparator', { link = 'StatusLine' })
  HI(0, 'NeogitBranch', { fg = '#EE5396' })
  HI(0, 'NeogitHunkHeader', { bg = '#393939', fg = '#D0D0D0' })
  HI(0, 'NeogitHunkHeaderHighlight', { bg = '#525252', fg = '#D0D0D0' })
  HI(0, 'NeogitRemote', { fg = '#78A9FF' })
  HI(0, 'NvimAnd', { link = 'NvimBinaryOperator' })
  HI(0, 'NvimArrow', { link = 'Delimiter' })
  HI(0, 'NvimAssignment', { link = 'Operator' })
  HI(0, 'NvimAssignmentWithAddition', { link = 'NvimAugmentedAssignment' })
  HI(0, 'NvimAssignmentWithConcatenation', { link = 'NvimAugmentedAssignment' })
  HI(0, 'NvimAssignmentWithSubtraction', { link = 'NvimAugmentedAssignment' })
  HI(0, 'NvimAugmentedAssignment', { link = 'NvimAssignment' })
  HI(0, 'NvimBinaryMinus', { link = 'NvimBinaryOperator' })
  HI(0, 'NvimBinaryOperator', { link = 'NvimOperator' })
  HI(0, 'NvimBinaryPlus', { link = 'NvimBinaryOperator' })
  HI(0, 'NvimCallingParenthesis', { link = 'NvimParenthesis' })
  HI(0, 'NvimColon', { link = 'Delimiter' })
  HI(0, 'NvimComma', { link = 'Delimiter' })
  HI(0, 'NvimComparison', { link = 'NvimBinaryOperator' })
  HI(0, 'NvimComparisonModifier', { link = 'NvimComparison' })
  HI(0, 'NvimConcat', { link = 'NvimBinaryOperator' })
  HI(0, 'NvimConcatOrSubscript', { link = 'NvimConcat' })
  HI(0, 'NvimContainer', { link = 'NvimParenthesis' })
  HI(0, 'NvimCurly', { link = 'NvimSubscript' })
  HI(0, 'NvimDict', { link = 'NvimContainer' })
  HI(0, 'NvimDivision', { link = 'NvimBinaryOperator' })
  HI(0, 'NvimDoubleQuote', { link = 'NvimStringQuote' })
  HI(0, 'NvimDoubleQuotedBody', { link = 'NvimStringBody' })
  HI(0, 'NvimDoubleQuotedEscape', { link = 'NvimStringSpecial' })
  HI(0, 'NvimDoubleQuotedUnknownEscape', { link = 'NvimInvalidValue' })
  HI(0, 'LspSignatureActiveParameter', { fg = '#3DDBD9' })
  HI(0, 'NvimEnvironmentSigil', { link = 'NvimOptionSigil' })
  HI(0, 'NvimFigureBrace', { link = 'NvimInternalError' })
  HI(0, 'NvimFloat', { link = 'NvimNumber' })
  HI(0, 'NvimIdentifier', { link = 'Identifier' })
  HI(0, 'NvimIdentifierKey', { link = 'NvimIdentifier' })
  HI(0, 'NvimIdentifierName', { link = 'NvimIdentifier' })
  HI(0, 'NvimIdentifierScope', { link = 'NvimIdentifier' })
  HI(0, 'NvimIdentifierScopeDelimiter', { link = 'NvimIdentifier' })
  HI(0, 'NvimInvalid', { link = 'Error' })
  HI(0, 'NvimInvalidAnd', { link = 'NvimInvalidBinaryOperator' })
  HI(0, 'NvimInvalidArrow', { link = 'NvimInvalidDelimiter' })
  HI(0, 'Error', { bg = '#1A1515', fg = '#F07342' })
  HI(0, 'NvimInvalidAssignmentWithAddition', { link = 'NvimInvalidAugmentedAssignment' })
  HI(0, 'NvimInvalidAssignmentWithConcatenation', { link = 'NvimInvalidAugmentedAssignment' })
  HI(0, 'NvimInvalidAssignmentWithSubtraction', { link = 'NvimInvalidAugmentedAssignment' })
  HI(0, 'NvimInvalidAugmentedAssignment', { link = 'NvimInvalidAssignment' })
  HI(0, 'NvimInvalidBinaryMinus', { link = 'NvimInvalidBinaryOperator' })
  HI(0, 'NvimInvalidBinaryOperator', { link = 'NvimInvalidOperator' })
  HI(0, 'NvimInvalidBinaryPlus', { link = 'NvimInvalidBinaryOperator' })
  HI(0, 'NvimInvalidCallingParenthesis', { link = 'NvimInvalidParenthesis' })
  HI(0, 'NvimInvalidColon', { link = 'NvimInvalidDelimiter' })
  HI(0, 'NvimInvalidComma', { link = 'NvimInvalidDelimiter' })
  HI(0, 'NvimInvalidComparison', { link = 'NvimInvalidBinaryOperator' })
  HI(0, 'NvimInvalidComparisonModifier', { link = 'NvimInvalidComparison' })
  HI(0, 'NvimInvalidConcat', { link = 'NvimInvalidBinaryOperator' })
  HI(0, 'NvimInvalidConcatOrSubscript', { link = 'NvimInvalidConcat' })
  HI(0, 'NvimInvalidContainer', { link = 'NvimInvalidParenthesis' })
  HI(0, 'NvimInvalidCurly', { link = 'NvimInvalidSubscript' })
  HI(0, 'NvimInvalidDelimiter', { link = 'NvimInvalid' })
  HI(0, 'NvimInvalidDict', { link = 'NvimInvalidContainer' })
  HI(0, 'NvimInvalidDivision', { link = 'NvimInvalidBinaryOperator' })
  HI(0, 'NvimInvalidDoubleQuote', { link = 'NvimInvalidStringQuote' })
  HI(0, 'NvimInvalidDoubleQuotedBody', { link = 'NvimInvalidStringBody' })
  HI(0, 'NvimInvalidDoubleQuotedEscape', { link = 'NvimInvalidStringSpecial' })
  HI(0, 'NvimInvalidDoubleQuotedUnknownEscape', { link = 'NvimInvalidValue' })
  HI(0, 'NvimInvalidEnvironmentName', { link = 'NvimInvalidIdentifier' })
  HI(0, 'NvimInvalidEnvironmentSigil', { link = 'NvimInvalidOptionSigil' })
  HI(0, 'NvimInvalidFigureBrace', { link = 'NvimInvalidDelimiter' })
  HI(0, 'NvimInvalidFloat', { link = 'NvimInvalidNumber' })
  HI(0, 'NvimInvalidIdentifier', { link = 'NvimInvalidValue' })
  HI(0, 'NvimInvalidIdentifierKey', { link = 'NvimInvalidIdentifier' })
  HI(0, 'NvimInvalidIdentifierName', { link = 'NvimInvalidIdentifier' })
  HI(0, 'NvimInvalidIdentifierScope', { link = 'NvimInvalidIdentifier' })
  HI(0, 'NvimInvalidIdentifierScopeDelimiter', { link = 'NvimInvalidIdentifier' })
  HI(0, 'NvimInvalidLambda', { link = 'NvimInvalidParenthesis' })
  HI(0, 'NvimInvalidList', { link = 'NvimInvalidContainer' })
  HI(0, 'NvimInvalidMod', { link = 'NvimInvalidBinaryOperator' })
  HI(0, 'NvimInvalidMultiplication', { link = 'NvimInvalidBinaryOperator' })
  HI(0, 'NvimInvalidNestingParenthesis', { link = 'NvimInvalidParenthesis' })
  HI(0, 'NvimInvalidNot', { link = 'NvimInvalidUnaryOperator' })
  HI(0, 'NvimInvalidNumber', { link = 'NvimInvalidValue' })
  HI(0, 'NvimInvalidNumberPrefix', { link = 'NvimInvalidNumber' })
  HI(0, 'NvimInvalidOperator', { link = 'NvimInvalid' })
  HI(0, 'NvimInvalidOptionName', { link = 'NvimInvalidIdentifier' })
  HI(0, 'NvimInvalidOptionScope', { link = 'NvimInvalidIdentifierScope' })
  HI(0, 'NvimInvalidOptionScopeDelimiter', { link = 'NvimInvalidIdentifierScopeDelimiter' })
  HI(0, 'NvimInvalidOptionSigil', { link = 'NvimInvalidIdentifier' })
  HI(0, 'NvimInvalidOr', { link = 'NvimInvalidBinaryOperator' })
  HI(0, 'NvimInvalidParenthesis', { link = 'NvimInvalidDelimiter' })
  HI(0, 'NvimInvalidPlainAssignment', { link = 'NvimInvalidAssignment' })
  HI(0, 'NvimInvalidRegister', { link = 'NvimInvalidValue' })
  HI(0, 'NvimInvalidSingleQuote', { link = 'NvimInvalidStringQuote' })
  HI(0, 'NvimInvalidSingleQuotedBody', { link = 'NvimInvalidStringBody' })
  HI(0, 'NvimInvalidSingleQuotedQuote', { link = 'NvimInvalidStringSpecial' })
  HI(0, 'NvimInvalidSingleQuotedUnknownEscape', { link = 'NvimInternalError' })
  HI(0, 'NvimInvalidSpacing', { link = 'ErrorMsg' })
  HI(0, 'NvimInvalidString', { link = 'NvimInvalidValue' })
  HI(0, 'NvimInvalidStringBody', { link = 'NvimStringBody' })
  HI(0, 'NvimInvalidStringQuote', { link = 'NvimInvalidString' })
  HI(0, 'NvimInvalidStringSpecial', { link = 'NvimStringSpecial' })
  HI(0, 'NvimInvalidSubscript', { link = 'NvimInvalidParenthesis' })
  HI(0, 'NvimInvalidSubscriptBracket', { link = 'NvimInvalidSubscript' })
  HI(0, 'NvimInvalidSubscriptColon', { link = 'NvimInvalidSubscript' })
  HI(0, 'NvimInvalidTernary', { link = 'NvimInvalidOperator' })
  HI(0, 'NvimInvalidTernaryColon', { link = 'NvimInvalidTernary' })
  HI(0, 'NvimInvalidUnaryMinus', { link = 'NvimInvalidUnaryOperator' })
  HI(0, 'NvimInvalidUnaryOperator', { link = 'NvimInvalidOperator' })
  HI(0, 'NvimInvalidUnaryPlus', { link = 'NvimInvalidUnaryOperator' })
  HI(0, 'NvimInvalidValue', { link = 'NvimInvalid' })
  HI(0, 'NvimLambda', { link = 'NvimParenthesis' })
  HI(0, 'NvimList', { link = 'NvimContainer' })
  HI(0, 'NvimMod', { link = 'NvimBinaryOperator' })
  HI(0, 'NvimMultiplication', { link = 'NvimBinaryOperator' })
  HI(0, 'NvimNestingParenthesis', { link = 'NvimParenthesis' })
  HI(0, 'NvimNot', { link = 'NvimUnaryOperator' })
  HI(0, 'NvimNumber', { link = 'Number' })
  HI(0, 'NvimNumberPrefix', { link = 'Type' })
  HI(0, 'NvimOperator', { link = 'Operator' })
  HI(0, 'NvimOptionName', { link = 'NvimIdentifier' })
  HI(0, 'NvimOptionScope', { link = 'NvimIdentifierScope' })
  HI(0, 'NvimOptionScopeDelimiter', { link = 'NvimIdentifierScopeDelimiter' })
  HI(0, 'NvimOptionSigil', { link = 'Type' })
  HI(0, 'NvimOr', { link = 'NvimBinaryOperator' })
  HI(0, 'NvimParenthesis', { link = 'Delimiter' })
  HI(0, 'NvimPlainAssignment', { link = 'NvimAssignment' })
  HI(0, 'NvimRegister', { link = 'SpecialChar' })
  HI(0, 'NvimSingleQuote', { link = 'NvimStringQuote' })
  HI(0, 'NvimSingleQuotedBody', { link = 'NvimStringBody' })
  HI(0, 'NvimSingleQuotedQuote', { link = 'NvimStringSpecial' })
  HI(0, 'NvimSingleQuotedUnknownEscape', { link = 'NvimInternalError' })
  HI(0, 'NvimSpacing', { link = 'Normal' })
  HI(0, 'NvimString', { link = 'String' })
  HI(0, 'NvimStringBody', { link = 'NvimString' })
  HI(0, 'NvimStringQuote', { link = 'NvimString' })
  HI(0, 'NvimStringSpecial', { link = 'SpecialChar' })
  HI(0, 'NvimSubscript', { link = 'NvimParenthesis' })
  HI(0, 'NvimSubscriptBracket', { link = 'NvimSubscript' })
  HI(0, 'NvimSubscriptColon', { link = 'NvimSubscript' })
  HI(0, 'NvimTernary', { link = 'NvimOperator' })
  HI(0, 'NvimTernaryColon', { link = 'NvimTernary' })
  HI(0, 'NvimTreeEmptyFolderName', { fg = '#82CFFF' })
  HI(0, 'NvimTreeFolderIcon', { fg = '#FF7EB6' })
  HI(0, 'NvimTreeFolderName', { fg = '#78A9FF' })
  HI(0, 'NvimTreeImageFile', { fg = '#FF7EB6' })
  HI(0, 'NvimTreeIndentMarker', { fg = '#393939' })
  HI(0, 'Keyword', { fg = '#CF223E' })
  HI(0, 'NvimTreeOpenedFolderName', { fg = '#82CFFF' })
  HI(0, 'NvimTreeWinSeparator', { bg = '#161616', fg = '#161616' })
  HI(0, 'NvimUnaryMinus', { link = 'NvimUnaryOperator' })
  HI(0, 'NvimUnaryOperator', { link = 'NvimOperator' })
  HI(0, 'NvimUnaryPlus', { link = 'NvimUnaryOperator' })
  HI(0, 'PmenuExtra', { link = 'Pmenu' })
  HI(0, 'Constant', { fg = '#E39C45' })
  HI(0, 'PmenuKind', { link = 'Pmenu' })
  HI(0, 'PmenuKindSel', { link = 'PmenuSel' })
  HI(0, 'PmenuSbar', { bg = '#262626', fg = '#D0D0D0' })
  HI(0, 'PmenuThumb', { bg = '#393939', fg = '#3DDBD9' })
  HI(0, 'PreCondit', { link = 'PreProc' })
  HI(0, 'RedrawDebugClear', { bg = '#FFFF00', ctermbg = 11 })
  HI(0, 'RedrawDebugComposed', { bg = '#008000', ctermbg = 10 })
  HI(0, 'RedrawDebugNormal', { cterm = { reverse = true }, reverse = true })
  HI(0, 'RedrawDebugRecompose', { bg = '#FF0000', ctermbg = 9 })
  HI(0, 'SpecialComment', { fg = '#3DDBD9' })
  HI(0, 'StatusCommand', { bg = '#42BE65', fg = '#161616' })
  HI(0, 'StatusInsert', { bg = '#FF7EB6', fg = '#161616' })
  HI(0, 'StatusLineDiagnosticError', { bg = '#161616', bold = true, cterm = { bold = true }, fg = '#EE5396' })
  HI(0, 'StatusLineDiagnosticWarn', { bg = '#161616', bold = true, cterm = { bold = true }, fg = '#BE95FF' })
  HI(0, 'StatusNormal', { bg = '#82CFFF', fg = '#161616' })
  HI(0, 'Number', { fg = '#E39C45' })
  HI(0, 'Boolean', { fg = '#E39C45' })
  HI(0, 'StatusVisual', { bg = '#BE95FF', fg = '#161616' })
  HI(0, 'TelescopePreviewBlock', { default = true, link = 'Constant' })
  HI(0, 'TelescopePreviewCharDev', { default = true, link = 'Constant' })
  HI(0, 'TelescopePreviewDate', { default = true, link = 'Directory' })
  HI(0, 'TelescopePreviewDirectory', { default = true, link = 'Directory' })
  HI(0, 'TelescopePreviewExecute', { default = true, link = 'String' })
  HI(0, 'TelescopePreviewGroup', { default = true, link = 'Constant' })
  HI(0, 'TelescopePreviewHyphen', { default = true, link = 'NonText' })
  HI(0, 'TelescopePreviewLink', { default = true, link = 'Special' })
  HI(0, 'TelescopePreviewMatch', { default = true, link = 'Search' })
  HI(0, 'TelescopePreviewMessage', { default = true, link = 'TelescopePreviewNormal' })
  HI(0, 'TelescopePreviewMessageFillchar', { default = true, link = 'TelescopePreviewMessage' })
  HI(0, 'TelescopePreviewPipe', { default = true, link = 'Constant' })
  HI(0, 'TelescopePreviewRead', { default = true, link = 'Constant' })
  HI(0, 'TelescopePreviewSize', { default = true, link = 'String' })
  HI(0, 'TelescopePreviewSocket', { default = true, link = 'Statement' })
  HI(0, 'TelescopePreviewSticky', { default = true, link = 'Keyword' })
  HI(0, 'TelescopePreviewUser', { default = true, link = 'Constant' })
  HI(0, 'TelescopePreviewWrite', { default = true, link = 'Statement' })
  HI(0, 'TelescopeTitle', { default = true, link = 'TelescopeBorder' })
  HI(0, 'VimwikiCode', { link = 'markdownCode' })
  HI(0, 'VimwikiHeader1', { link = 'markdownH1' })
  HI(0, 'VimwikiHeader2', { link = 'markdownH1' })
  HI(0, 'VimwikiHeader3', { link = 'markdownH1' })
  HI(0, 'VimwikiHeader4', { link = 'markdownH1' })
  HI(0, 'VimwikiHeader5', { link = 'markdownH1' })
  HI(0, 'VimwikiHeader6', { link = 'markdownH1' })
  HI(0, 'VimwikiHeaderChar', { link = 'markdownH1' })
  HI(0, 'VimwikiLink', { link = 'markdownUrl' })
  HI(0, 'VimwikiList', { link = 'markdownListMarker' })
  HI(0, 'Whitespace', { link = 'NonText' })
  HI(0, 'WinSeparator', { link = 'VertSplit' })
  HI(0, 'alpha1', { fg = '#525252' })
  HI(0, 'alpha2', { fg = '#D0D0D0' })
  HI(0, 'alpha3', { fg = '#525252' })
  HI(0, 'asciidocAttributeEntry', { fg = '#82CFFF' })
  HI(0, 'asciidocAttributeList', { link = 'asciidocAttributeEntry' })
  HI(0, 'asciidocAttributeRef', { link = 'asciidocAttributeEntry' })
  HI(0, 'asciidocHLabel', { link = 'markdownH1' })
  HI(0, 'asciidocOneLineTitle', { link = 'markdownH1' })
  HI(0, 'asciidocQuotedMonospaced', { link = 'markdownBlockquote' })
  HI(0, 'asciidocURL', { link = 'markdownUrl' })
  HI(0, 'helpHeader', { fg = '#82CFFF' })
  HI(0, 'helpHeadline', { fg = '#EE5396' })
  HI(0, 'helpHyperTextJump', { fg = '#3DDBD9' })
  HI(0, 'helpSpecial', { fg = '#78A9FF' })
  HI(0, 'htmlH1', { link = 'markdownH1' })
  HI(0, 'lCursor', vim.empty_dict())
  HI(0, 'markdownBoldItalic', { bold = true, cterm = { bold = true, italic = true }, italic = true })
  HI(0, 'markdownBold', { link = 'Bold' })
  HI(0, 'markdownBlockquote', { fg = '#3DDBD9' })
  HI(0, 'luaTodo', { link = 'Todo' })
  HI(0, 'luaTable', { link = 'Structure' })
  HI(0, 'luaSymbolOperator', { link = 'luaOperator' })
  HI(0, 'luaStringDelimiter', { link = 'luaString' })
  HI(0, 'luaString2', { link = 'String' })
  HI(0, 'luaString', { link = 'String' })
  HI(0, 'luaStatement', { link = 'Statement' })
  HI(0, 'luaSpecial', { link = 'SpecialChar' })
  HI(0, 'luaRepeat', { link = 'Repeat' })
  HI(0, 'luaParenError', { link = 'Error' })
  HI(0, 'luaOperator', { link = 'Operator' })
  HI(0, 'luaNumber', { link = 'Number' })
  HI(0, 'luaMetaMethod', { link = 'Function' })
  HI(0, 'luaLabel', { link = 'Label' })
  HI(0, 'luaFunction', { link = 'Function' })
  HI(0, 'luaFunc', { link = 'Identifier' })
  HI(0, 'luaFor', { link = 'Repeat' })
  HI(0, 'luaError', { link = 'Error' })
  HI(0, 'luaConstant', { link = 'Constant' })
  HI(0, 'luaCondElse', { link = 'Conditional' })
  HI(0, 'luaCond', { link = 'Conditional' })
  HI(0, 'luaCommentDelimiter', { link = 'luaComment' })
  HI(0, 'luaComment', { link = 'Comment' })
  HI(0, 'IncSearch', { bg = '#E39C45', fg = '#2D2424' })
  HI(0, 'CmpItemAbbrMatchFuzzy', { bold = true, cterm = { bold = true }, fg = '#E39C45' })
  HI(0, 'Function', { fg = '#E39C45' })
  HI(0, 'DiagnosticUnnecessary', { link = 'Comment' })
  HI(0, 'DiagnosticDeprecated', { cterm = { strikethrough = true }, sp = '#FF0000', strikethrough = true })
  HI(0, 'WildMenu', { bg = '#959A6B', fg = '#F07342' })
  HI(0, 'WarningMsg', { fg = '#F07342' })
  HI(0, 'VisualNOS', { bg = '#393939', fg = '#F07342' })
  HI(0, 'Visual', { bg = '#453636' })
  HI(0, 'VertSplit', { bg = '#1A1515', fg = '#DCC9BC' })
  HI(0, 'Underlined', { cterm = { underline = true }, fg = '#F07342', underline = true })
  HI(0, 'Type', { fg = '#959A6B' })
  HI(0, 'TooLong', { bg = '#393939', fg = '#F07342' })
  HI(0, 'Title', { fg = '#E39C45' })
  HI(0, 'TelescopeSelectionCaret', { default = true, link = 'TelescopeSelection' })
  HI(0, 'TelescopeSelection', { bg = '#3E3030' })
  HI(0, 'TelescopeResultsVariable', { default = true, link = 'SpecialChar' })
  HI(0, 'TelescopeResultsTitle', { bg = '#171212', fg = '#171212' })
  HI(0, 'TelescopeResultsStruct', { default = true, link = 'Struct' })
  HI(0, 'TelescopeResultsSpecialComment', { default = true, link = 'SpecialComment' })
  HI(0, 'TelescopeResultsOperator', { default = true, link = 'Operator' })
  HI(0, 'TelescopeResultsNumber', { default = true, link = 'Number' })
  HI(0, 'TelescopeResultsNormal', { default = true, link = 'TelescopeNormal' })
  HI(0, 'TelescopeResultsMethod', { default = true, link = 'Method' })
  HI(0, 'TelescopeResultsLineNr', { default = true, link = 'LineNr' })
  HI(0, 'TelescopeResultsIdentifier', { default = true, link = 'Identifier' })
  HI(0, 'Bold', { bold = true, cterm = { bold = true } })
  HI(0, 'TelescopeResultsFunction', { default = true, link = 'Function' })
  HI(0, 'TelescopeResultsField', { default = true, link = 'Function' })
  HI(0, 'TelescopeResultsDiffUntracked', { default = true, link = 'NonText' })
  HI(0, 'TelescopeResultsDiffDelete', { default = true, link = 'DiffDelete' })
  HI(0, 'TelescopeResultsDiffChange', { default = true, link = 'DiffChange' })
  HI(0, 'TelescopeResultsDiffAdd', { default = true, link = 'DiffAdd' })
  HI(0, 'TelescopeResultsConstant', { default = true, link = 'Constant' })
  HI(0, 'TelescopeResultsComment', { default = true, link = 'Comment' })
  HI(0, 'TelescopeResultsClass', { default = true, link = 'Function' })
  HI(0, 'TelescopeResultsBorder', { default = true, link = 'TelescopeBorder' })
  HI(0, 'TelescopePromptTitle', { bg = '#F07342', fg = '#282020' })
  HI(0, 'TelescopePromptPrefix', { bg = '#3E3030', fg = '#F07342' })
  HI(0, 'TelescopePromptNormal', { bg = '#3E3030', fg = '#DCC9BC' })
  HI(0, 'TelescopePromptCounter', { default = true, link = 'NonText' })
  HI(0, 'TelescopePromptBorder', { bg = '#3E3030', fg = '#3E3030' })
  HI(0, 'TelescopePreviewTitle', { bg = '#768F80', fg = '#282020' })
  HI(0, 'TelescopePreviewNormal', { default = true, link = 'TelescopeNormal' })
  HI(0, 'TelescopePreviewLine', { bg = '#2D2424' })
  HI(0, 'TelescopePreviewBorder', { default = true, link = 'TelescopeBorder' })
  HI(0, 'TelescopeNormal', { bg = '#171212' })
  HI(0, 'TelescopeMultiSelection', { default = true, link = 'Type' })
  HI(0, 'TelescopeMultiIcon', { default = true, link = 'Identifier' })
  HI(0, 'TelescopeMatching', { bold = true, cterm = { bold = true, italic = true }, fg = '#3DDBD9', italic = true })
  HI(0, 'Debug', { fg = '#F07342' })
  HI(0, 'Exception', { fg = '#F07342' })
  HI(0, 'FoldColumn', { bg = '#1A1515', fg = '#756D94' })
  HI(0, 'Folded', { bg = '#2D2424', fg = '#725A5A' })
  HI(0, 'Italic', { cterm = { italic = true } })
  HI(0, 'Macro', { fg = '#F07342' })
  HI(0, 'MatchParen', { bg = '#725A5A', cterm = { underline = true }, underline = true })
  HI(0, 'DiagnosticVirtualTextWarn', { link = 'DiagnosticWarn' })
  HI(0, 'MoreMsg', { fg = '#768F80' })
  HI(0, 'Question', { fg = '#E39C45' })
  HI(0, 'DiagnosticVirtualTextInfo', { link = 'DiagnosticInfo' })
  HI(0, 'SpecialKey', { fg = '#725A5A' })
  HI(0, 'DiagnosticUnderlineError', { cterm = { undercurl = true }, fg = '#EE5396', sp = '#F07342', undercurl = true })
  HI(0, 'DiagnosticUnderlineWarn', { cterm = { undercurl = true }, fg = '#BE95FF', sp = '#CF223E', undercurl = true })
  HI(0, 'DiagnosticUnderlineInfo', { cterm = { undercurl = true }, fg = '#D0D0D0', undercurl = true })
  HI(0, 'DiagnosticFloatingHint', { link = 'DiagnosticHint' })
  HI(0, 'DiagnosticFloatingError', { link = 'DiagnosticError' })
  HI(0, 'Conceal', { bg = '#1A1515', fg = '#E39C45' })
  HI(0, 'Cursor', { bg = '#DCC9BC', fg = '#1A1515' })
  HI(0, 'SignColumn', { bg = '#1A1515', fg = '#9C8181' })
  HI(0, 'StatusLine', { bg = '#453636', fg = '#DCC9BC' })
  HI(0, 'StatusLineNC', { bg = '#2D2424', fg = '#9C8181' })
  HI(0, 'TelescopeBorder', { bg = '#171212', fg = '#171212' })
  HI(0, 'TabLineSel', { bg = '#2D2424', fg = '#768F80' })
  HI(0, 'TabLineFill', { bg = '#2D2424', fg = '#725A5A' })
  HI(0, 'TabLine', { bg = '#2D2424', fg = '#725A5A' })
  HI(0, 'TSVariableBuiltin', { fg = '#F07342', italic = true })
  HI(0, 'TSURI', { fg = '#E39C45', underline = true })
  HI(0, 'TSTypeBuiltin', { fg = '#959A6B', italic = true })
  HI(0, 'TSText', { fg = '#DCC9BC' })
  HI(0, 'TSTag', { fg = '#F07342' })
  HI(0, 'TSStringEscape', { fg = '#756D94' })
  HI(0, 'TSString', { fg = '#768F80' })
  HI(0, 'TSKeyword', { fg = '#CF223E' })
  HI(0, 'TSFuncMacro', { fg = '#F07342' })
  HI(0, 'TSFuncBuiltin', { fg = '#E39C45', italic = true })
  HI(0, 'TSException', { fg = '#F07342' })
  HI(0, 'TSConditional', { fg = '#CF223E' })
  HI(0, 'Substitute', { bg = '#959A6B', fg = '#2D2424' })
  HI(0, 'String', { fg = '#768F80' })
  HI(0, 'StatusTerminal', { bg = '#33B1FF', fg = '#161616' })
  HI(0, 'StatusReplace', { bg = '#3DDBD9', fg = '#161616' })
  HI(0, '@lsp.type.number', { link = '@number' })
  HI(0, 'CmpItemKindSnippet', { bg = '#42BE65', fg = '#9C8181' })
  HI(0, 'CmpItemKindOperator', { bg = '#33B1FF', fg = '#DCC9BC' })
  HI(0, 'CmpItemKindEnumMember', { bg = '#82CFFF', fg = '#959A6B' })
  HI(0, 'CmpItemKindTypeParameter', { bg = '#3DDBD9', fg = '#959A6B' })
  HI(0, 'Float', { fg = '#E39C45' })
  HI(0, 'Delimiter', { fg = '#614F76' })
  HI(0, 'Define', { fg = '#CF223E' })
  HI(0, 'CmpItemKindUnit', { bg = '#42BE65', fg = '#959A6B' })
  HI(0, 'CmpItemKindEvent', { bg = '#FF7EB6', fg = '#959A6B' })
  HI(0, 'CmpItemKindStruct', { bg = '#33B1FF', fg = '#959A6B' })
  HI(0, 'CmpItemKindInterface', { bg = '#3DDBD9', fg = '#959A6B' })
  HI(0, 'CmpItemKindClass', { bg = '#33B1FF', fg = '#959A6B' })
  HI(0, 'CmpItemKindConstructor', { bg = '#EE5396', fg = '#E39C45' })
  HI(0, 'CmpItemKindMethod', { bg = '#82CFFF', fg = '#E39C45' })
  HI(0, 'CursorLineNr', { bg = '#2D2424', fg = '#9C8181' })
  HI(0, 'CursorLine', { bg = '#2D2424' })
  HI(0, 'CursorColumn', { bg = '#2D2424' })
  HI(0, 'ColorColumn', { bg = '#2D2424' })
  HI(0, 'Identifier', { fg = '#F07342' })
  HI(0, 'DiagnosticFloatingInfo', { link = 'DiagnosticInfo' })
  HI(0, '@event', { link = 'Identifier' })
  HI(0, 'CmpItemAbbrDeprecated', { fg = '#725A5A', strikethrough = true })
  HI(0, 'CmpItemAbbr', { bg = '#2D2424', fg = '#DCC9BC' })
  HI(0, 'Conditional', { fg = '#CF223E' })
  HI(0, 'CmpItemKind', { default = true, link = 'CmpItemKindDefault' })
  HI(0, '@typeParameter', { link = 'Type' })
  HI(0, 'CmpItemMenu', { cterm = { italic = true }, fg = '#9C8181', italic = true })
  HI(0, 'DiagnosticSignInfo', { link = 'DiagnosticInfo' })
  HI(0, 'CmpItemKindValue', { bg = '#82CFFF', fg = '#E39C45' })
  HI(0, 'CmpItemKindReference', { bg = '#EE5396', fg = '#F07342' })
  HI(0, 'CmpItemKindProperty', { bg = '#FF7EB6', fg = '#F07342' })
  HI(0, 'CmpItemAbbrMatch', { bold = true, cterm = { bold = true }, fg = '#E39C45' })
  HI(0, 'CmpItemKindModule', { bg = '#33B1FF', fg = '#DCC9BC' })
  HI(0, 'DiagnosticFloatingWarn', { link = 'DiagnosticWarn' })
  HI(0, 'NormalFloat', { bg = '#1A1515', fg = '#DCC9BC' })
  HI(0, 'DiagnosticSignHint', { link = 'DiagnosticHint' })
  HI(0, 'CmpItemKindFunction', { bg = '#33B1FF', fg = '#E39C45' })
  HI(0, 'CmpItemKindField', { bg = '#FF7EB6', fg = '#F07342' })
  HI(0, 'DiagnosticSignWarn', { link = 'DiagnosticWarn' })
  HI(0, 'DiagnosticVirtualTextError', { link = 'DiagnosticError' })
  HI(0, 'CmpItemKindEnum', { bg = '#78A9FF', fg = '#959A6B' })
  HI(0, 'DiagnosticSignError', { link = 'DiagnosticError' })
  HI(0, 'CmpItemKindConstant', { bg = '#EE5396', fg = '#E39C45' })
  HI(0, 'Character', { fg = '#F07342' })
  HI(0, '@modifier', { link = 'Identifier' })
  HI(0, '@lsp.type.variable', { link = '@variable' })
  HI(0, '@struct', { link = 'TSType' })
  HI(0, '@regexp', { link = 'TSStringRegex' })
  HI(0, '@lsp.type.string.rust', { link = '@string' })
  HI(0, '@interface', { link = 'Structure' })
  HI(0, '@lsp.type.property', { link = '@property' })
  HI(0, '@lsp.type.selfParameter', { link = '@variable.builtin' })
  HI(0, 'DiagnosticVirtualTextHint', { link = 'DiagnosticHint' })
  HI(0, 'IlluminatedWordRead', { sp = '#9C8181', underline = true })
  HI(0, 'Statement', { fg = '#F07342' })
  HI(0, 'IlluminatedWordWrite', { sp = '#9C8181', underline = true })
  HI(0, 'PmenuExtraSel', { link = 'PmenuSel' })
  HI(0, 'Operator', { fg = '#DCC9BC' })
  HI(0, 'MiniCompletionActiveParameter', { link = 'CursorLine' })
  HI(0, 'ModeMsg', { fg = '#768F80' })
  HI(0, 'DiagnosticUnderlineHint', { cterm = { undercurl = true }, fg = '#D0D0D0', sp = '#756D94', undercurl = true })
  HI(0, '@lsp.type.builtinType', { link = '@type.builtin' })
  HI(0, 'NvimEnvironmentName', { link = 'NvimIdentifier' })
  HI(0, 'NvimInvalidAssignment', { link = 'NvimInvalid' })
  HI(0, '@variable.builtin', { fg = '#D0D0D0', link = 'TSVariableBuiltin' })
  HI(0, 'LspReferenceText', { bg = '#525252', sp = '#9C8181', underline = true })
  HI(0, 'NvimTreeNormal', { bg = '#161616', fg = '#D0D0D0' })
  HI(0, '@lsp.type.macro', { link = 'Macro' })
  HI(0, '@lsp.type.magicFunction', { link = '@function.builtin' })
  HI(0, '@lsp.type.method', { link = '@function' })
  HI(0, 'WinBar', { cterm = { bold = true }, fg = '#DCC9BC' })
  HI(0, 'WinBarNC', { fg = '#9C8181' })
  HI(0, '@lsp.mod.builtin', { link = 'Special' })
  HI(0, '@lsp.mod.readonly', { link = '@constant' })
  HI(0, '@lsp.mod.typeHint', { link = 'Type' })
  HI(0, '@lsp.type.boolean', { link = '@boolean' })
  HI(0, '@lsp.type.builtinConstant', { link = '@constant.builtin' })
  HI(0, 'QuickFixLine', { bg = '#2D2424' })
  HI(0, '@lsp.type.class', { link = 'Structure' })
  HI(0, '@lsp.type.comment', { link = '@comment' })
  HI(0, '@lsp.type.decorator', { link = 'Decorator' })
  HI(0, '@lsp.type.enum', { link = '@type' })
  HI(0, '@lsp.type.enumMember', { link = '@constant' })
  HI(0, '@lsp.type.escapeSequence', { link = '@string.escape' })
  HI(0, '@lsp.type.formatSpecifier', { link = '@punctuation.special' })
  HI(0, '@lsp.type.function', { link = '@function' })
  HI(0, '@lsp.type.interface', { link = 'Structure' })
  HI(0, '@lsp.type.keyword', { link = '@keyword' })
  HI(0, 'Include', { fg = '#E39C45' })
  HI(0, 'Label', { fg = '#959A6B' })
  HI(0, 'PreProc', { fg = '#959A6B' })
  HI(0, '@lsp.type.namespace', { link = '@namespace' })
  HI(0, 'IlluminatedWordText', { sp = '#9C8181', underline = true })
end

setup()
